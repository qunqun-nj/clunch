(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{28:function(e,t,a){"use strict";
/*!
 * 💡 - 提供常用的DOM操作方法
 * https://github.com/hai2007/tool.js/blob/master/xhtml.js
 *
 * author hai2007 < https://hai2007.gitee.io/sweethome >
 *
 * Copyright (c) 2021-present hai2007 走一步，再走一步。
 * Released under the MIT license
 */var i="http://www.w3.org/2000/svg";t.a={stopPropagation:function(e){(e=e||window.event).stopPropagation?e.stopPropagation():e.cancelBubble=!0},preventDefault:function(e){(e=e||window.event).preventDefault?e.preventDefault():e.returnValue=!1},isNode:function(e){return e&&(1===e.nodeType||9===e.nodeType||11===e.nodeType)},bind:function(e,t,a){if(e.constructor!==Array&&e.constructor!==NodeList)window.attachEvent?e.attachEvent("on"+t,a):e.addEventListener(t,a,!1);else for(var i=0;i<e.length;i++)this.bind(e[i],t,a)},unbind:function(e,t,a){if(e.constructor!==Array&&e.constructor!==NodeList)window.detachEvent?e.detachEvent("on"+t,a):e.removeEventListener(t,a,!1);else for(var i=0;i<e.length;i++)this.unbind(e[i],t,a)},find:function(e,t,a){if(!this.isNode(e))return[];for(var i=e.getElementsByTagName(a||"*"),r=[],d=0;d<i.length;d++)this.isNode(i[d])&&("function"!=typeof t||t(i[d]))&&r.push(i[d]);return r},children:function(e,t){for(var a=e.childNodes,i=[],r=0;r<a.length;r++)this.isNode(a[r])&&("function"!=typeof t||t(a[r]))&&i.push(a[r]);return i},hasClass:function(e,t,a){t.constructor!==Array&&(t=[t]);for(var i=" "+(e.getAttribute("class")||"")+" ",r=0;r<t.length;r++)if(i.indexOf(" "+t[r]+" ")>=0){if(a)return!0}else if(!a)return!1;return!0},removeClass:function(e,t){var a=(" "+(e.getAttribute("class")||"")+" ").replace(" "+t.trim()+" "," ");e.setAttribute("class",a.trim())},addClass:function(e,t){if(!this.hasClass(e,t)){var a=e.getAttribute("class")||"";e.setAttribute("class",a+" "+t)}},toNode:function(e,t){var a;(a=t?document.createElementNS(i,"svg"):document.createElement("div")).innerHTML=e;for(var r=a.childNodes,d=0;d<r.length;d++)if(this.isNode(r[d]))return r[d]},trigger:function(e,t){if(document.createEventObject)e.fireEvent("on"+t,document.createEventObject());else{var a=document.createEvent("HTMLEvents");a.initEvent(t,!0,!1),e.dispatchEvent(a)}},getStyle:function(e,t){var a=document.defaultView&&document.defaultView.getComputedStyle?document.defaultView.getComputedStyle(e,null):e.currentStyle;return"string"==typeof t?a.getPropertyValue(t):a},offsetPosition:function(e){var t=0,a=0;for(a=e.offsetTop,t=e.offsetLeft,e=e.offsetParent;e;)a+=e.offsetTop,t+=e.offsetLeft,e=e.offsetParent;return{left:t,top:a}},mousePosition:function(e,t){var a=e.getBoundingClientRect();if(!t||!t.clientX)throw new Error("Event is necessary!");return{x:t.clientX-a.left,y:t.clientY-a.top}},remove:function(e){e.parentNode.removeChild(e)},setStyles:function(e,t){for(var a in t)e.style[a]=t[a]},size:function(e,t){var a,i;return"content"==t?(i=e.clientWidth-(this.getStyle(e,"padding-left")+"").replace("px","")-(this.getStyle(e,"padding-right")+"").replace("px",""),a=e.clientHeight-(this.getStyle(e,"padding-top")+"").replace("px","")-(this.getStyle(e,"padding-bottom")+"").replace("px","")):"padding"==t?(i=e.clientWidth,a=e.clientHeight):"border"==t?(i=e.offsetWidth,a=e.offsetHeight):"scroll"==t?(i=e.scrollWidth,a=e.scrollHeight):(i=e.offsetWidth,a=e.offsetHeight),{width:i,height:a}},append:function(e,t){var a=this.isNode(t)?t:this.toNode(t);return e.appendChild(a),a},prepend:function(e,t){var a=this.isNode(t)?t:this.toNode(t);return e.insertBefore(a,e.childNodes[0]),a},after:function(e,t){var a=this.isNode(t)?t:this.toNode(t);return e.parentNode.insertBefore(a,e.nextSibling),a},before:function(e,t){var a=this.isNode(t)?t:this.toNode(t);return e.parentNode.insertBefore(a,e),a}}},29:function(e,t,a){"use strict";var i=a(28);t.a=function(e,t){for(var a=i.a.find(document.getElementById("root"),(function(t){return i.a.hasClass(t,e)})),r=0;r<a.length;r++)a[r].setAttribute("active","no");i.a.find(document.getElementById("root"),(function(a){return i.a.hasClass(a,[e,t])}))[0].setAttribute("active","yes")}},30:function(e,t,a){"use strict";var i=[],r=null;t.a=function(e,t){t=t||0,e=e||document.documentElement;var a,d,n=function(){var e=window.location.href.split("?")[1]||"";if(""==e)return{};var t=e.split("&"),a={};return t.forEach((function(e){var t=e.split("=");a[t[0]]=t[1]})),a}().fixed;if(n){var c=document.getElementById("fixed-"+n);if(c){var o=c.offsetTop-t,u=e.scrollTop||0;a=function(t){e.scrollTop=(o-u)*t+u},(d={timer:function(e,t,a){if(!e)throw new Error("Tick is required!");t=t||400;var r=(new Date).valueOf()+"_"+(1e3*Math.random()).toFixed(0);return i.push({id:r,createTime:new Date,tick:e,duration:t,callback:a}),d.start(),r},start:function(){r||(r=setInterval(d.tick,13))},tick:function(){var e,t,a,r,n,c,o,u=i;for((i=[]).length=0,t=0;t<u.length;t++)e=(n=u[t]).createTime,a=n.tick,c=n.duration,r=n.callback,o=(+new Date-e)/c,a(o=o>1?1:o),o<1&&n.id?i.push(n):r&&r(o);i.length<=0&&d.stop()},stop:function(){r&&(clearInterval(r),r=null)}}).timer((function(e){a(e)}),500,(function(){e.scrollTop=o}))}}else e.scrollTop=0}},64:function(e,t,a){var i=a(65);"string"==typeof i&&(i=[[e.i,i,""]]),i.locals&&(e.exports=i.locals);(0,a(1).default)("data-quickpaper-6de16d46",i,!0)},65:function(e,t,a){(e.exports=a(0)(!1)).push([e.i,"",""])},93:function(e,t,a){"use strict";a.r(t);var i=a(29),r=a(30),d=a(31),n=a.n(d);n.a.series("ui-rects",["number","json",function(e,t){return{attrs:{x:e(0)(!0),y:e(0)(!0),width:e(700)(!0),height:e(360)(!0),data:t(),ruler:t()},region:{default:function(e,t){for(var a=(t.width-100)/t.data.length,i=0;i<t.data.length;i++)e("no-"+i,{value:t.data[i]}).fillRect(t.x+50+a*(i+.1),t.y+t.height-50,.8*a,-.005*t.data[i]*(t.height-100))}},link:function(e,t){for(var a=(t.width-100)/t.data.length,i=0;i<t.data.length;i++)e.config("fillStyle","rgba(220, 220, 220, 0.8)").fillRect(t.x+50+a*(i+.1),t.y+50,.8*a,t.height-100),e.config("fillStyle","red").fillRect(t.x+50+a*(i+.1),t.y+t.height-50,.8*a,-.005*t.data[i]*(t.height-100));this.$reuseSeriesLink("ruler",{attr:{x:t.x+50,y:t.y+t.height-50,length:t.width-100,value:t.ruler,"value-position":"between"}})}}}]);var c=[{name:"ui-rects",attrs:{":data":"values",ruler:'["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"]',"c-on:click":"doit"},children:[]}],o={created:function(){Object(i.a)("menu-2","series")},mounted:function(){Object(r.a)(document.getElementById("course-id"),44),new n.a({el:document.getElementById("canvas-5"),render:c,data:function(){return{values:[120,200,150,80,70,110,130]}},methods:{doit:function(e){console.log(e)}}})}};a(64);o.render=function(e){return e("div",{quickpaper:"","data-quickpaper-6de16d46":""},[e("div",{class:"doc-view","data-quickpaper-6de16d46":""},[e("header",{id:"fixed-top","data-quickpaper-6de16d46":""},["自定义图形组件"]),e("p",{"data-quickpaper-6de16d46":""},["虽然通过",e("a",{href:"#/api/series-list?fixed=top",target:"_blank","data-quickpaper-6de16d46":""},["内置组件"]),"也可以绘制各种图表，可是如果我们希望拥有带着一定业务场景的组件，被我们很方便的复用，那就必须学习如何自定义组件了。"]),e("h1",{id:"fixed-what","data-quickpaper-6de16d46":""},["需求分析"]),e("p",{"data-quickpaper-6de16d46":""},["为了方便说明，我们就决定对",e("a",{href:"#/course/event?fixed=top",target:"_blank","data-quickpaper-6de16d46":""},["上一节：如何添加图形交互事件"]),"中柱状图进行封装。"]),e("p",{"data-quickpaper-6de16d46":""},["我们定义这个图形的名称为：",e("span",{class:"public","data-quickpaper-6de16d46":""},["ui-rects"]),"，图形可以通过",e("a",{href:"#/api/directive?fixed=c-on",target:"_blank",class:"link","data-quickpaper-6de16d46":""},["c-on"]),"添加交互，并且回调数据里面包含了有用的信息（由于当前组件是单一的，我们需要知道点击的具体小矩形的信息）。"]),e("h1",{id:"fixed-define","data-quickpaper-6de16d46":""},["定义组件"]),e("h3",{id:"fixed-define-frame","data-quickpaper-6de16d46":""},["基本结构"]),e("p",{"data-quickpaper-6de16d46":""},["下面是本次定义组件部分代码的主体结构："]),e("pre",{"q-code":"","data-quickpaper-6de16d46":""},["import Clunch from 'clunch';↵Clunch.series('ui-rects', [\"number\", \"json\", function ($number, $json) {↵    return {↵        // 定义属性↵        attrs: {},↵        // 定义区域或子区域↵        region: {↵            default: function (render, attr) {}↵        },↵        // 具体的绘制方法↵        link(painter, attr) {}↵    };↵}]);"]),e("p",{"data-quickpaper-6de16d46":""},["主要分三个配置项："]),e("ul",{"data-quickpaper-6de16d46":""},[e("li",{"data-quickpaper-6de16d46":""},[e("span",{class:"important","data-quickpaper-6de16d46":""},["attrs"]),"：规定使用此组件的时候应该配置哪些属性。"]),e("li",{"data-quickpaper-6de16d46":""},[e("span",{class:"important","data-quickpaper-6de16d46":""},["link"]),"：根据属性绘图，也就是这里规定了你的组件长什么样子。"]),e("li",{"data-quickpaper-6de16d46":""},[e("span",{class:"important","data-quickpaper-6de16d46":""},["region"]),"：用于管理哪些区域被标记了，只有标记的区域才可以有交互。"])]),e("p",{"data-quickpaper-6de16d46":""},["接下来，我们分别说明这三个地方的代码。"]),e("h3",{id:"fixed-define-attrs","data-quickpaper-6de16d46":""},["定义属性"]),e("pre",{"q-code":"","data-quickpaper-6de16d46":""},["attrs: {↵    x: $number(0)(true),↵    y: $number(0)(true),↵    width: $number(700)(true),↵    height: $number(360)(true),↵    data: $json(),↵    ruler: $json()↵}"]),e("p",{"data-quickpaper-6de16d46":""},[e("span",{class:"public","data-quickpaper-6de16d46":""},["x"]),"、",e("span",{class:"public","data-quickpaper-6de16d46":""},["y"]),"分别表示图形左上角的位置，",e("span",{class:"public","data-quickpaper-6de16d46":""},["width"]),"、",e("span",{class:"public","data-quickpaper-6de16d46":""},["height"]),"表示图形的大小，都参与动画（参与动画的意思是，数据改变后会一点点改变，不会突然改变）且都有默认值，因此非必输。"]),e("p",{"data-quickpaper-6de16d46":""},[e("span",{class:"public","data-quickpaper-6de16d46":""},["data"]),"和",e("span",{class:"public","data-quickpaper-6de16d46":""},["ruler"]),"分别表示矩形数据和刻度尺的数据，必输。"]),e("h3",{id:"fixed-define-link","data-quickpaper-6de16d46":""},["具体的绘制方法"]),e("pre",{"q-code":"","data-quickpaper-6de16d46":""},["link(painter, attr) {↵↵    // 得出每个小条目的宽(包括了两边的留白)↵    let disWidth = (attr.width - 100) / attr.data.length;↵↵    for (let i = 0; i < attr.data.length; i++) {↵↵        // 背景灰色↵        painter.config('fillStyle', 'rgba(220, 220, 220, 0.8)').fillRect(↵            attr.x + 50 + disWidth * (i + 0.1), attr.y + 50,↵            disWidth * 0.8, attr.height - 100↵        );↵↵        // 值红色↵        painter.config('fillStyle', 'red').fillRect(↵            attr.x + 50 + disWidth * (i + 0.1), attr.y + attr.height - 50,↵            disWidth * 0.8, -0.005 * attr.data[i] * (attr.height - 100)↵        );↵↵    }↵↵    // 横坐标↵    this.$reuseSeriesLink('ruler', {↵        attr: {↵            x: attr.x + 50,↵            y: attr.y + attr.height - 50,↵            length: attr.width - 100,↵            value: attr.ruler,↵            \"value-position\": 'between'↵        }↵    });↵↵}"]),e("p",{"data-quickpaper-6de16d46":""},["简单的看就是使用",e("a",{href:"#/api/painter?fixed=top",target:"_blank","data-quickpaper-6de16d46":""},["painter"]),"这只画笔来绘制图形。除此之外，你还可以复用已有的组件，使用",e("a",{href:"#/api/series-reuse?fixed=top",target:"_blank","data-quickpaper-6de16d46":""},["this.$reuseSeriesLink"]),"方法来实现复用。"]),e("h3",{id:"fixed-define-region","data-quickpaper-6de16d46":""},["定义区域或子区域"]),e("p",{"data-quickpaper-6de16d46":""},["最后是区域，区域其实也是绘制，只不过是通过绘图的方式记录区域，还是看看代码："]),e("pre",{"q-code":"","data-quickpaper-6de16d46":""},['region: {↵    default: function (render, attr) {↵↵        // 得出每个小条目的宽(包括了两边的留白)↵        let disWidth = (attr.width - 100) / attr.data.length;↵↵        for (let i = 0; i < attr.data.length; i++) {↵↵            // 定义子区域↵            render("no-"+i,{↵                // 记录当前的值↵                value:attr.data[i]↵            })↵↵            // 绘制子区域↵            .fillRect(↵                attr.x + 50 + disWidth * (i + 0.1), attr.y + attr.height - 50,↵                disWidth * 0.8, -0.005 * attr.data[i] * (attr.height - 100)↵            );↵↵        }↵    }↵}']),e("p",{"data-quickpaper-6de16d46":""},["因为有很多个条目，我们给每个小条目起了个名字：",e("span",{class:"public","data-quickpaper-6de16d46":""},['"no"+i']),"，并且把数据保存起来了，在接下来使用中你可以对比看一下打印结果。"]),e("h1",{id:"fixed-use","data-quickpaper-6de16d46":""},["使用组件"]),e("p",{"data-quickpaper-6de16d46":""},["还是先看看",e("span",{class:"important","data-quickpaper-6de16d46":""},[".clunch文件"]),"的内容（当前，别忘了引入刚刚定义的组件）："]),e("p",{"data-quickpaper-6de16d46":""},["其余的和之前的一样，下面是运行效果："]),e("pre",{"q-code":"html","data-quickpaper-6de16d46":""},['<ui-rects :data=\'values\' ruler=\'["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"]\' c-on:click=\'doit\' />']),e("h2",{"data-quickpaper-6de16d46":""},["运行效果"]),e("div",{id:"canvas-5",style:"height:360px;","data-quickpaper-6de16d46":""},[]),e("p",{"data-quickpaper-6de16d46":""},["打开控制台，点击的时候就会打印你点击结点的信息："]),e("pre",{"q-code":"","data-quickpaper-6de16d46":""},['attr: {x: 0, y: 0, width: 700, height: 360, data: Array(7), …}↵data: {value: 120}↵id: "0"↵left: 105↵region: "default"↵series: "ui-rects"↵subRegion: "no-0"↵top: 182↵__proto__: Object']),e("p",{"data-quickpaper-6de16d46":""},["我们点击的是第一个组件，可以看见子组件名称是",e("span",{class:"public","data-quickpaper-6de16d46":""},["no-0"]),"，没有问题，记录的数据data是",e("span",{class:"public","data-quickpaper-6de16d46":""},["{value:120}"]),"，也没有问题。我们推荐你打开控制台，点击不同的地方看看打印的结果。"]),e("h1",{id:"fixed-series-end","data-quickpaper-6de16d46":""},["小结"]),e("p",{"data-quickpaper-6de16d46":""},["到这里，你就学会了如何自定义组件、如何复用组件、区域如何定义、定义区域的时候如何传递数据给事件回调和自定义组件的属性如何配置等基本使用。"]),e("div",{class:"bottom-link","data-quickpaper-6de16d46":""},[e("a",{href:"#/course/event?fixed=top",target:"_blank",class:"left","data-quickpaper-6de16d46":""},["上一节：如何添加图形交互事件"])])])])};t.default=o}}]);