(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{24:function(a,e,t){"use strict";var i=t(3);e.a=function(a,e){for(var t=i.a.find(document.getElementById("root"),(function(e){return i.a.hasClass(e,a)})),r=0;r<t.length;r++)t[r].setAttribute("active","no");i.a.find(document.getElementById("root"),(function(t){return i.a.hasClass(t,[a,e])}))[0].setAttribute("active","yes")}},25:function(a,e,t){"use strict";var i=[],r=null;e.a=function(a,e){e=e||0,a=a||document.documentElement;var t=function(){var a=window.location.href.split("?")[1]||"";if(""==a)return{};var e=a.split("&"),t={};return e.forEach((function(a){var e=a.split("=");t[e[0]]=e[1]})),t}().fixed;if(t){var d=document.getElementById("fixed-"+t);if(d){var n=d.offsetTop-e,p=a.scrollTop||0;!function(a,e,t){arguments.length<2&&(e=400);var d={timer:function(a,e,t){if(!a)throw new Error("Tick is required!");var r=(new Date).valueOf()+"_"+(1e3*Math.random()).toFixed(0);return i.push({id:r,createTime:new Date,tick:a,duration:e,callback:t}),d.start(),r},start:function(){r||(r=setInterval(d.tick,13))},tick:function(){var a,e,t,r,n,p,c,u=i;for((i=[]).length=0,e=0;e<u.length;e++)a=(n=u[e]).createTime,t=n.tick,p=n.duration,r=n.callback,!1,(c=(+new Date-a)/p)>=1&&!0,t(c=c>1?1:c),c<1&&n.id?i.push(n):r&&r(c);i.length<=0&&d.stop()},stop:function(){r&&(clearInterval(r),r=null)}},n=d.timer((function(e){a(e)}),e,t)}((function(e){a.scrollTop=(n-p)*e+p}),500,(function(){a.scrollTop=n}))}}else a.scrollTop=0;document.getElementById("root-view").scrollTop=0}},59:function(a,e,t){var i=t(60);"string"==typeof i&&(i=[[a.i,i,""]]),i.locals&&(a.exports=i.locals);(0,t(2).default)("data-quickpaper-7e848da0",i,!0)},60:function(a,e,t){(a.exports=t(1)(!1)).push([a.i,"",""])},98:function(a,e,t){"use strict";t.r(e);var i=t(24),r=t(25),d=t(26),n=t.n(d);n.a.series("ui-rects",["number","json",function(a,e){return{attrs:{x:a(0)(!0),y:a(0)(!0),width:a(700)(!0),height:a(360)(!0),data:e(),ruler:e()},region:{default:function(a,e){for(var t=(e.width-100)/e.data.length,i=0;i<e.data.length;i++)a("no-"+i,{value:e.data[i]}).fillRect(e.x+50+t*(i+.1),e.y+e.height-50,.8*t,-.005*e.data[i]*(e.height-100))}},link:function(a,e){for(var t=(e.width-100)/e.data.length,i=0;i<e.data.length;i++)a.config("fillStyle","rgba(220, 220, 220, 0.8)").fillRect(e.x+50+t*(i+.1),e.y+50,.8*t,e.height-100),a.config("fillStyle","red").fillRect(e.x+50+t*(i+.1),e.y+e.height-50,.8*t,-.005*e.data[i]*(e.height-100));this.$reuseSeriesLink("ruler",{attr:{x:e.x+50,y:e.y+e.height-50,length:e.width-100,value:e.ruler,"value-position":"between"}})}}}]);var p=[{name:"ui-rects",attrs:{":data":"values",ruler:'["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"]',"c-on:click":"doit"},children:[]}],c={created:function(){Object(i.a)("menu-2","series")},mounted:function(){Object(r.a)(document.getElementById("course-id"),44),new n.a({el:document.getElementById("canvas-5"),render:p,data:function(){return{values:[120,200,150,80,70,110,130]}},methods:{doit:function(a){console.log(a)}}})}};t(59);c.render=function(a){return a("div",{quickpaper:"","data-quickpaper-7e848da0":""},[a("div",{class:"doc-view","data-quickpaper-7e848da0":""},[a("header",{id:"fixed-top","data-quickpaper-7e848da0":""},["自定义图形组件"]),a("p",{"data-quickpaper-7e848da0":""},["虽然通过",a("a",{href:"#/api/series-list?fixed=top",target:"_blank","data-quickpaper-7e848da0":""},["内置组件"]),"也可以绘制各种图表，可是如果我们希望拥有带着一定业务场景的组件，被我们很方便的复用，那就必须学习如何自定义组件了。"]),a("h1",{id:"fixed-what","data-quickpaper-7e848da0":""},["需求分析"]),a("p",{"data-quickpaper-7e848da0":""},["为了方便说明，我们就决定对",a("a",{href:"#/course/event?fixed=top",target:"_blank","data-quickpaper-7e848da0":""},["上一节：如何添加图形交互事件"]),"中柱状图进行封装。"]),a("p",{"data-quickpaper-7e848da0":""},["我们定义这个图形的名称为：",a("span",{class:"public","data-quickpaper-7e848da0":""},["ui-rects"]),"，图形可以通过",a("a",{href:"#/api/directive?fixed=c-on",target:"_blank",class:"link","data-quickpaper-7e848da0":""},["c-on"]),"添加交互，并且回调数据里面包含了有用的信息（由于当前组件是单一的，我们需要知道点击的具体小矩形的信息）。"]),a("h1",{id:"fixed-define","data-quickpaper-7e848da0":""},["定义组件"]),a("h3",{id:"fixed-define-frame","data-quickpaper-7e848da0":""},["基本结构"]),a("p",{"data-quickpaper-7e848da0":""},["下面是本次定义组件部分代码的主体结构："]),a("pre",{"q-code":"","data-quickpaper-7e848da0":""},["import Clunch from 'clunch';↵Clunch.series('ui-rects', [\"number\", \"json\", function ($number, $json) {↵    return {↵        // 定义属性↵        attrs: {},↵        // 定义区域或子区域↵        region: {↵            default: function (render, attr) {}↵        },↵        // 具体的绘制方法↵        link(painter, attr) {}↵    };↵}]);"]),a("p",{"data-quickpaper-7e848da0":""},["主要分三个配置项："]),a("ul",{"data-quickpaper-7e848da0":""},[a("li",{"data-quickpaper-7e848da0":""},[a("span",{class:"important","data-quickpaper-7e848da0":""},["attrs"]),"：规定使用此组件的时候应该配置哪些属性。"]),a("li",{"data-quickpaper-7e848da0":""},[a("span",{class:"important","data-quickpaper-7e848da0":""},["link"]),"：根据属性绘图，也就是这里规定了你的组件长什么样子。"]),a("li",{"data-quickpaper-7e848da0":""},[a("span",{class:"important","data-quickpaper-7e848da0":""},["region"]),"：用于管理哪些区域被标记了，只有标记的区域才可以有交互。"])]),a("p",{"data-quickpaper-7e848da0":""},["接下来，我们分别说明这三个地方的代码。"]),a("h3",{id:"fixed-define-attrs","data-quickpaper-7e848da0":""},["定义属性"]),a("pre",{"q-code":"","data-quickpaper-7e848da0":""},["attrs: {↵    x: $number(0)(true),↵    y: $number(0)(true),↵    width: $number(700)(true),↵    height: $number(360)(true),↵    data: $json(),↵    ruler: $json()↵}"]),a("p",{"data-quickpaper-7e848da0":""},[a("span",{class:"public","data-quickpaper-7e848da0":""},["x"]),"、",a("span",{class:"public","data-quickpaper-7e848da0":""},["y"]),"分别表示图形左上角的位置，",a("span",{class:"public","data-quickpaper-7e848da0":""},["width"]),"、",a("span",{class:"public","data-quickpaper-7e848da0":""},["height"]),"表示图形的大小，都参与动画（参与动画的意思是，数据改变后会一点点改变，不会突然改变）且都有默认值，因此非必输。"]),a("p",{"data-quickpaper-7e848da0":""},[a("span",{class:"public","data-quickpaper-7e848da0":""},["data"]),"和",a("span",{class:"public","data-quickpaper-7e848da0":""},["ruler"]),"分别表示矩形数据和刻度尺的数据，必输。"]),a("h3",{id:"fixed-define-link","data-quickpaper-7e848da0":""},["具体的绘制方法"]),a("pre",{"q-code":"","data-quickpaper-7e848da0":""},["link(painter, attr) {↵↵    // 得出每个小条目的宽(包括了两边的留白)↵    let disWidth = (attr.width - 100) / attr.data.length;↵↵    for (let i = 0; i < attr.data.length; i++) {↵↵        // 背景灰色↵        painter.config('fillStyle', 'rgba(220, 220, 220, 0.8)').fillRect(↵            attr.x + 50 + disWidth * (i + 0.1), attr.y + 50,↵            disWidth * 0.8, attr.height - 100↵        );↵↵        // 值红色↵        painter.config('fillStyle', 'red').fillRect(↵            attr.x + 50 + disWidth * (i + 0.1), attr.y + attr.height - 50,↵            disWidth * 0.8, -0.005 * attr.data[i] * (attr.height - 100)↵        );↵↵    }↵↵    // 横坐标↵    this.$reuseSeriesLink('ruler', {↵        attr: {↵            x: attr.x + 50,↵            y: attr.y + attr.height - 50,↵            length: attr.width - 100,↵            value: attr.ruler,↵            \"value-position\": 'between'↵        }↵    });↵↵}"]),a("p",{"data-quickpaper-7e848da0":""},["简单的看就是使用",a("a",{href:"#/api/painter?fixed=top",target:"_blank","data-quickpaper-7e848da0":""},["painter"]),"这只画笔来绘制图形。除此之外，你还可以复用已有的组件，使用",a("a",{href:"#/api/series-reuse?fixed=top",target:"_blank","data-quickpaper-7e848da0":""},["this.$reuseSeriesLink"]),"方法来实现复用。"]),a("h3",{id:"fixed-define-region","data-quickpaper-7e848da0":""},["定义区域或子区域"]),a("p",{"data-quickpaper-7e848da0":""},["最后是区域，区域其实也是绘制，只不过是通过绘图的方式记录区域，还是看看代码："]),a("pre",{"q-code":"","data-quickpaper-7e848da0":""},['region: {↵    default: function (render, attr) {↵↵        // 得出每个小条目的宽(包括了两边的留白)↵        let disWidth = (attr.width - 100) / attr.data.length;↵↵        for (let i = 0; i < attr.data.length; i++) {↵↵            // 定义子区域↵            render("no-"+i,{↵                // 记录当前的值↵                value:attr.data[i]↵            })↵↵            // 绘制子区域↵            .fillRect(↵                attr.x + 50 + disWidth * (i + 0.1), attr.y + attr.height - 50,↵                disWidth * 0.8, -0.005 * attr.data[i] * (attr.height - 100)↵            );↵↵        }↵    }↵}']),a("p",{"data-quickpaper-7e848da0":""},["因为有很多个条目，我们给每个小条目起了个名字：",a("span",{class:"public","data-quickpaper-7e848da0":""},['"no"+i']),"，并且把数据保存起来了，在接下来使用中你可以对比看一下打印结果。"]),a("h1",{id:"fixed-use","data-quickpaper-7e848da0":""},["使用组件"]),a("p",{"data-quickpaper-7e848da0":""},["还是先看看",a("span",{class:"important","data-quickpaper-7e848da0":""},[".clunch文件"]),"的内容（当前，别忘了引入刚刚定义的组件）："]),a("p",{"data-quickpaper-7e848da0":""},["其余的和之前的一样，下面是运行效果："]),a("pre",{"q-code":"html","data-quickpaper-7e848da0":""},['<ui-rects :data=\'values\' ruler=\'["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"]\' c-on:click=\'doit\' />']),a("h2",{"data-quickpaper-7e848da0":""},["运行效果"]),a("div",{id:"canvas-5",style:"height:360px;","data-quickpaper-7e848da0":""},[]),a("p",{"data-quickpaper-7e848da0":""},["打开控制台，点击的时候就会打印你点击结点的信息："]),a("pre",{"q-code":"","data-quickpaper-7e848da0":""},['attr: {x: 0, y: 0, width: 700, height: 360, data: Array(7), …}↵data: {value: 120}↵id: "0"↵left: 105↵region: "default"↵series: "ui-rects"↵subRegion: "no-0"↵top: 182↵__proto__: Object']),a("p",{"data-quickpaper-7e848da0":""},["我们点击的是第一个组件，可以看见子组件名称是",a("span",{class:"public","data-quickpaper-7e848da0":""},["no-0"]),"，没有问题，记录的数据data是",a("span",{class:"public","data-quickpaper-7e848da0":""},["{value:120}"]),"，也没有问题。我们推荐你打开控制台，点击不同的地方看看打印的结果。"]),a("h1",{id:"fixed-series-end","data-quickpaper-7e848da0":""},["小结"]),a("p",{"data-quickpaper-7e848da0":""},["到这里，你就学会了如何自定义组件、如何复用组件、区域如何定义、定义区域的时候如何传递数据给事件回调和自定义组件的属性如何配置等基本使用。"]),a("div",{class:"bottom-link","data-quickpaper-7e848da0":""},[a("a",{href:"#/course/event?fixed=top",target:"_blank",class:"left","data-quickpaper-7e848da0":""},["上一节：如何添加图形交互事件"])])])])};e.default=c}}]);