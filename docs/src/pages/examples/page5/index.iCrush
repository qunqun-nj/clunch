<template>
    <div id='canvas'></div>
</template>
<script>
    import image from './image.clunch';
    import Clunch from 'clunch';
    import processWave from './process-wave';

    Clunch.series('ui-process-wave', processWave);

    export default {
        mounted() {
            let banner = document.getElementById('examples-github-banner');
            banner.style.display = "block";
            banner.setAttribute('href', 'https://github.com/hai2007/clunch/tree/master/docs/src/pages/examples/page5');
            window.clunch = new Clunch({
                el: document.getElementById('canvas'),
                render: image,
                time: 2000,
                data() {
                    return {
                        process: 0,
                        process_value: "0.00%",
                        deep: 0
                    };
                },
                mounted() {
                    this.process = Math.random();
                    this.process_value = (this.process * 100).toFixed(2) + "%";
                    setInterval(() => {
                        this.process = Math.random();
                        this.process_value = (this.process * 100).toFixed(2) + "%";
                    }, 4000);

                    this.deep = 1;
                    setInterval(() => {
                        this.deep = this.deep == 0 ? 1 : 0;
                    }, 2000);
                }
            });
        }
    };
</script>
<style>
    div {
        width: 100vw;
        height: 100vh;
    }
</style>
